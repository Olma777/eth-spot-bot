import os
import asyncio
from aiohttp import web
from aiogram import Bot, Dispatcher, types
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message

# === –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_HOST = os.getenv("WEBHOOK_HOST")  # –Ω–∞–ø—Ä–∏–º–µ—Ä: https://cryptotradebot.onrender.com
WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ===
bot = Bot(BOT_TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# === –ë–∞–∑–æ–≤—ã–π —Ö–µ–Ω–¥–ª–µ—Ä ===
@dp.message()
async def echo(message: Message):
    print("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    await message.answer("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Webhook!")

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook ===
async def handle_webhook(request):
    try:
        print("üì¨ Webhook –≤—ã–∑–≤–∞–Ω")
        data = await request.json()
        update = types.Update(**data)
        await dp.feed_update(bot, update)
    except Exception as e:
        print(f"[Webhook error] {e}")
    return web.Response(text="OK")

# === Healthcheck ===
async def healthcheck(request):
    print("üîç Healthcheck –≤—ã–∑–≤–∞–Ω")
    return web.Response(text="OK")

# === –°–æ–∑–¥–∞–Ω–∏–µ aiohttp-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===
app = web.Application()
app.router.add_post(WEBHOOK_PATH, handle_webhook)
app.router.add_get("/healthz", healthcheck)

# === –°—Ç–∞—Ä—Ç –≤–µ–±—Ö—É–∫–∞ ===
async def on_startup():
    await bot.set_webhook(WEBHOOK_URL)
    print(f"üöÄ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: {WEBHOOK_URL}")

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    async def main():
        await on_startup()
        runner = web.AppRunner(app)
        await runner.setup()
        site = web.TCPSite(runner, host="0.0.0.0", port=8000)
        await site.start()
        print("üåê –°–µ—Ä–≤–µ—Ä aiohttp –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 8000")

        # –û–∂–∏–¥–∞–Ω–∏–µ –≤ —Ñ–æ–Ω–µ
        while True:
            await asyncio.sleep(3600)

    asyncio.run(main())
